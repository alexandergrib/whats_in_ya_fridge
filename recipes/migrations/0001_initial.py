# Generated by Django 4.0.3 on 2022-04-17 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='BaseIngredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(upload_to='ingredients/', verbose_name='Image')),
                ('origin', models.CharField(blank=True, max_length=500, verbose_name='Place of origin')),
                ('vegan_friendly', models.BooleanField(default=False)),
                ('vegetarian_friendly', models.BooleanField(default=False)),
                ('weight', models.PositiveSmallIntegerField(default=1)),
                ('allergens', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.allergens')),
            ],
            options={
                'verbose_name': 'Base Ingredient',
                'verbose_name_plural': 'Base Ingredients',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Category')),
                ('description', models.TextField(verbose_name='Description')),
                ('url', models.SlugField(max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CookingTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='RatingStar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(default=0, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Rating Star',
                'verbose_name_plural': 'Rating Stars',
                'ordering': ['-value'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('time_cooking', models.DurationField(default=None)),
                ('portions', models.PositiveSmallIntegerField(default=1, verbose_name='Portions')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(upload_to='recipes/', verbose_name='Image')),
                ('difficulty', models.CharField(choices=[('1', 'Super Easy'), ('2', 'Easy'), ('3', 'Medium'), ('4', 'Hard'), ('5', 'professional')], max_length=1)),
                ('weight', models.PositiveSmallIntegerField(default=1)),
                ('url', models.SlugField(max_length=130, unique=True)),
                ('draft', models.BooleanField(default=False, verbose_name='Draft')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.category')),
                ('ingredients', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.baseingredients')),
                ('technology', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.cookingtechnology')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('text', models.TextField(max_length=5000, verbose_name='Review Text')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.review', verbose_name='Parent')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe', verbose_name='recipe')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='RecipeImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(upload_to='recipe_images/', verbose_name='Image')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe', verbose_name='Recipe')),
            ],
            options={
                'verbose_name': 'Recipe Image',
                'verbose_name_plural': 'Recipe Images',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=15, verbose_name='IP address')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe', verbose_name='recipe')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ratingstar', verbose_name='star')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
            },
        ),
        migrations.CreateModel(
            name='BaseIngredientNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.PositiveSmallIntegerField(help_text='set in kcal')),
                ('fat', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('sugars', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('salt', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('saturates', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('carbohydrates', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('fibre', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('protein', models.PositiveSmallIntegerField(help_text='set in grams')),
                ('base_ingredient_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.baseingredients')),
            ],
            options={
                'verbose_name': 'Ingredient Nutrition',
                'verbose_name_plural': 'Ingredients Nutrition',
            },
        ),
    ]
